package com.spordee.user.entity.primaryUserData;


import com.querydsl.core.annotations.QueryEntity;
import com.spordee.user.annotations.CascadeSave;
import com.spordee.user.entity.primaryUserData.cascadetables.UserEmails;
import com.spordee.user.entity.primaryUserData.cascadetables.UserImages;
import com.spordee.user.enums.UserStatus;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.DBRef;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.Field;

import java.util.List;

@Setter
@Getter
@AllArgsConstructor
@QueryEntity
@Document(collation = "primary_user_details")
//@CompoundIndexes({ @CompoundIndex(name = "user_name", def = "{'email.id' : 1, 'age': 1}") }
@NoArgsConstructor
public class PrimaryUserDetails {

    @Id
    private String id;
    @Field("first_name")
    private String firstName;
    @Field("last_name")
    private String lastName;
    @Field("is_premium")
    private boolean isPremium;
    @Indexed(unique = true)
    @Field("user_name")
    private String userName;// Generated By the BackEnd
    @Field("user_status")
    private UserStatus userStatus; // Enum
    @Field("open_job")
    private boolean openJob;
    @Field("is_verified")
    private boolean isVerified;
    @Field("birth_day")
    private String birthDay;
    @Field("created_date")
    private String createdDate;
    @Field("updated_date")
    private String updatedDate;
    @DBRef @CascadeSave @Field("user_images")
    private List<UserImages> userImage;
    @DBRef @CascadeSave @Field("user_emails")
    private List<UserEmails> userEmail;

}
